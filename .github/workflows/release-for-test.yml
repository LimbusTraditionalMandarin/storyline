# This file is part of ptsd project which is released under GNU GPL v3.0.
# Copyright (c) 2025- Limbus Traditional Mandarin

name: Make testing localized storylines

on:
  workflow_dispatch:

env:
  # Change TARGET_DIR to the name of your output folder (e.g., cn, RU, Th etc.).
  # It must match the name in line 21 of the `src/ptsd/__init__.py` file.
  TARGET_DIR: "Hant"

permissions:
  contents: write # for repository-dispatch

jobs:
  download_and_merge:
    runs-on: ubuntu-latest
    env:
      PARATRANZ_TOKENS: ${{ secrets.PARATRANZ_TOKENS }}
    steps:
      - name: Checkout story-data
        uses: actions/checkout@v4
        with:
          repository: LimbusTraditionalMandarin/story-data
          path: storyline

      - name: Clean TARGET directory
        run: |
          rm -rf storyline/${{ env.TARGET_DIR }}
          mkdir -p storyline/${{ env.TARGET_DIR }}

      - name: Checkout main branch
        uses: actions/checkout@v4
        with:
          ref: main
          path: main-repo

      - name: Delete existing testing release and tag
        run: gh release delete testing --cleanup-tag --yes || true
        working-directory: main-repo
        env:
          GH_TOKEN: ${{ github.token }}

      - name: Setup uv
        uses: astral-sh/setup-uv@v5

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install dependencies
        working-directory: main-repo
        run: uv sync

      - name: Run merge script
        working-directory: main-repo
        run: uv run ptsd download --storyline-folder ../storyline
        env:
          PARATRANZ_TOKENS: ${{ env.PARATRANZ_TOKENS }}

      - name: Generate release metadata
        id: generate_metadata
        run: |
          TAG=$(date +%s)
          RELEASE_DATE=$(date -u +%Y-%m-%d)
          echo "tag=$TAG" >> $GITHUB_OUTPUT
          echo "release_date=$RELEASE_DATE" >> $GITHUB_OUTPUT

      - name: Prepare release asset
        working-directory: storyline/${{ env.TARGET_DIR }}
        run: |
          zip -r "../../${{ env.TARGET_DIR }}_TEMP_${{ steps.generate_metadata.outputs.tag }}.zip" .

      - name: Create GitHub Prerlease
        uses: softprops/action-gh-release@v1
        with:
          tag_name: testing
          name: Testing ${{ steps.generate_metadata.outputs.release_date }}
          body: |
            - v${{ steps.generate_metadata.outputs.tag }} testing storyline update
          files: ${{ env.TARGET_DIR }}_TEMP_${{ steps.generate_metadata.outputs.tag }}.zip
          draft: false
          prerelease: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
